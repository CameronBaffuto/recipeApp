{"ast":null,"code":"import _asyncToGenerator from\"/Users/cameronbaffuto/Developer/recipeSearch/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/cameronbaffuto/Developer/recipeSearch/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/cameronbaffuto/Developer/recipeSearch/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState}from'react';import Axios from'axios';import RecipeTile from'./RecipeTile';import Container from'react-bootstrap/Container';import Form from'react-bootstrap/Form';import Button from'react-bootstrap/Button';import Row from'react-bootstrap/Row';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Search(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),query=_useState2[0],setQuery=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),recipes=_useState4[0],setRecipes=_useState4[1];var _useState5=useState(\"shellfish-free\"),_useState6=_slicedToArray(_useState5,2),healthlabel=_useState6[0],sethealthlabel=_useState6[1];var YOUR_APP_ID=\"70c35a79\";var YOUR_APP_KEY=\"e636f7e338545e8b405e86cfc465aaf3\";var url=\"https://api.edamam.com/search?q=\".concat(query,\"&app_id=\").concat(YOUR_APP_ID,\"&app_key=\").concat(YOUR_APP_KEY,\"&from=0&to=100&health=\").concat(healthlabel);function getRecipes(){return _getRecipes.apply(this,arguments);}function _getRecipes(){_getRecipes=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Axios.get(url);case 2:result=_context.sent;setRecipes(result.data.hits);console.log(result.data);case 5:case\"end\":return _context.stop();}}},_callee);}));return _getRecipes.apply(this,arguments);}var submit=function submit(e){e.preventDefault();getRecipes();};return/*#__PURE__*/_jsxs(Container,{className:\"mt-5\",children:[/*#__PURE__*/_jsx(\"h5\",{onClick:getRecipes,children:\"Search for Recipes\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:submit,children:[/*#__PURE__*/_jsx(Form.Group,{className:\"mb-3\",controlId:\"ingredient\",children:/*#__PURE__*/_jsx(Form.Control,{type:\"text\",name:\"search\",placeholder:\"Search for a ingredient...\",value:query,onChange:function onChange(e){return setQuery(e.target.value);}})}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"health\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Choose Health Filter\"}),/*#__PURE__*/_jsxs(Form.Select,{children:[/*#__PURE__*/_jsx(\"option\",{onClick:function onClick(){return sethealthlabel(\"shellfish-free\");},value:\"shellfish-free\",children:\"Shellfish Free\"}),/*#__PURE__*/_jsx(\"option\",{onClick:function onClick(){return sethealthlabel(\"vegan\");},value:\"vegan\",children:\"Vegan\"}),/*#__PURE__*/_jsx(\"option\",{onClick:function onClick(){return sethealthlabel(\"vegetarian\");},value:\"vegetarian\",children:\"Vegetarian\"}),/*#__PURE__*/_jsx(\"option\",{onClick:function onClick(){return sethealthlabel(\"gulten-free\");},value:\"gulten-free\",children:\"Gluten Free\"}),\"\\\\\",/*#__PURE__*/_jsx(\"option\",{onClick:function onClick(){return sethealthlabel(\"fish-free\");},value:\"fish-free\",children:\"Fish Free\"}),/*#__PURE__*/_jsx(\"option\",{onClick:function onClick(){return sethealthlabel(\"dairy-free\");},value:\"dairy-free\",children:\"Dairy Free\"}),/*#__PURE__*/_jsx(\"option\",{onClick:function onClick(){return sethealthlabel(\"low-sugar\");},value:\"low-sugar\",children:\"Low Sugar\"})]})]}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"submit\",className:\"mb-3\",value:\"Search\",children:\"Search\"})]}),/*#__PURE__*/_jsx(Row,{xs:2,md:4,className:\"g-4\",children:recipes.map(function(recipe){return/*#__PURE__*/_jsx(RecipeTile,{recipe:recipe});})})]});}export default Search;","map":{"version":3,"sources":["/Users/cameronbaffuto/Developer/recipeSearch/src/Search.js"],"names":["React","useState","Axios","RecipeTile","Container","Form","Button","Row","Search","query","setQuery","recipes","setRecipes","healthlabel","sethealthlabel","YOUR_APP_ID","YOUR_APP_KEY","url","getRecipes","get","result","data","hits","console","log","submit","e","preventDefault","target","value","map","recipe"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Axios from 'axios';\nimport RecipeTile from './RecipeTile';\nimport Container from 'react-bootstrap/Container'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Row from 'react-bootstrap/Row'\n\n\nfunction Search() {\n\n    const [query, setQuery] = useState(\"\");\n    const [recipes, setRecipes] = useState([]);\n    const [healthlabel, sethealthlabel] = useState(\"shellfish-free\");\n  \n    const YOUR_APP_ID = \"70c35a79\";\n    const YOUR_APP_KEY = \"e636f7e338545e8b405e86cfc465aaf3\";  \n  \n  var url = `https://api.edamam.com/search?q=${query}&app_id=${YOUR_APP_ID}&app_key=${YOUR_APP_KEY}&from=0&to=100&health=${healthlabel}`;\n  \n  async function getRecipes() {\n    var result = await Axios.get(url);\n    setRecipes(result.data.hits);\n    console.log(result.data);\n  }\n  \n  const submit = (e) => {\n    e.preventDefault();\n    getRecipes();\n  }\n\n    return (\n    <Container className=\"mt-5\">\n    <h5 onClick={getRecipes}>Search for Recipes</h5>\n      <Form onSubmit={submit}>\n        <Form.Group className=\"mb-3\" controlId=\"ingredient\">\n        <Form.Control type=\"text\" name=\"search\" placeholder=\"Search for a ingredient...\" value={query} onChange={(e) => setQuery(e.target.value)}/>\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"health\">\n        <Form.Label>Choose Health Filter</Form.Label>\n        <Form.Select>\n          <option onClick={() =>  sethealthlabel(\"shellfish-free\")} value=\"shellfish-free\">Shellfish Free</option>\n          <option onClick={() =>  sethealthlabel(\"vegan\")} value=\"vegan\">Vegan</option>\n          <option onClick={() =>  sethealthlabel(\"vegetarian\")} value=\"vegetarian\">Vegetarian</option>\n          <option onClick={() =>  sethealthlabel(\"gulten-free\")} value=\"gulten-free\">Gluten Free</option>\\\n          <option onClick={() =>  sethealthlabel(\"fish-free\")} value=\"fish-free\">Fish Free</option>\n          <option onClick={() =>  sethealthlabel(\"dairy-free\")} value=\"dairy-free\">Dairy Free</option>\n          <option onClick={() =>  sethealthlabel(\"low-sugar\")} value=\"low-sugar\">Low Sugar</option>\n        </Form.Select>\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\" className=\"mb-3\" value=\"Search\">Search</Button>\n\n      </Form>\n    \n<Row xs={2} md={4} className=\"g-4\">\n    \n        {recipes.map((recipe) => {\n          return <RecipeTile recipe={recipe} />;\n        })}\n  \n</Row>\n</Container>\n    )\n}\n\nexport default Search\n"]},"metadata":{},"sourceType":"module"}